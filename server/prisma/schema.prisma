// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// Definición de la tabla User para gestionar el registro de usuarios
model User {
  id          Int      @id @default(autoincrement())  // Campo ID autoincremental
  username        String   @db.VarChar(10)               // Nombre del usuario, máximo 100 caracteres
  email       String   @unique                        // Email único
  password    String   @db.VarChar(15)               // Contraseña cifrada
  createdAt   DateTime @default(now())                // Fecha de creación
  updatedAt   DateTime @updatedAt                     // Fecha de actualización automática
  library     Library[]                               // Relación con la tabla Library (1-n)
}

model Audiobook {
  id          Int       @id @default(autoincrement())  // Campo ID autoincremental
  title       String    @db.VarChar(255)@unique             // Título del audiolibro, máximo 255 caracteres
  categoryId  Int                                      // Relación con la tabla Category
  category    Category  @relation(fields: [categoryId], references: [id]) // Clave foránea a Category
  description String?   @db.Text                       // Descripción opcional (usar Text para textos largos)
  author      String    @db.VarChar(100)               // Autor del audiolibro, máximo 100 caracteres
  duration    String    @db.VarChar(10)                // Duración del audiolibro, máximo 10 caracteres
  pdfUrl      String?   @db.Text      @unique          // URL del archivo PDF
  coverUrl    String?   @db.Text      @unique         // URL de la portada
  audioUrl    String?   @db.Text      @unique        // URL del archivo de audio
  text     String?   @db.Text      @unique         // URL para un archivo JSON
  createdAt   DateTime  @default(now())                // Fecha de creación
  updatedAt   DateTime  @updatedAt                     // Fecha de actualización automática
  library     Library[]                               // Relación con la tabla Library (1-n)
}

model Library {
  id           Int       @id @default(autoincrement())  // Campo ID autoincremental
  userId       Int                                      // Relación con la tabla User
  audiobookId  Int                                      // Relación con la tabla Audiobook
  audiobook    Audiobook @relation(fields: [audiobookId], references: [id]) // Clave foránea a Audiobook
  user         User      @relation(fields: [userId], references: [id])      // Clave foránea a User
  favorite     Boolean   @default(false)                // Si el audiolibro es marcado como favorito
  played       Boolean   @default(false)                // Si el audiolibro ha sido reproducido
}

model Category {
  id         Int        @id @default(autoincrement())  // Campo ID autoincremental
  name       String     @unique @db.VarChar(100)       // Nombre de la categoría, máximo 100 caracteres
  audiobooks Audiobook[]                              // Relación con la tabla Audiobook (1-n)
}

